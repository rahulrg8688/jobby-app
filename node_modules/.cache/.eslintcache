[{"/home/workspace/reactjs/coding-practices/jobbyApp/src/index.js":"1","/home/workspace/reactjs/coding-practices/jobbyApp/src/App.js":"2","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/Login/index.js":"3","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/jobs/index.js":"4","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/Home/index.js":"5","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/ProtectedRoute/index.js":"6","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/header/index.js":"7","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/jobsDescription/index.js":"8","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/JobsItemDetails/index.js":"9","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/Skills/index.js":"10","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/salary/index.js":"11"},{"size":285,"mtime":1687538946061,"results":"12","hashOfConfig":"13"},{"size":1319,"mtime":1687801324215,"results":"14","hashOfConfig":"13"},{"size":2213,"mtime":1687801324385,"results":"15","hashOfConfig":"13"},{"size":4978,"mtime":1687801438016,"results":"16","hashOfConfig":"13"},{"size":412,"mtime":1687597770525,"results":"17","hashOfConfig":"13"},{"size":295,"mtime":1687597770585,"results":"18","hashOfConfig":"13"},{"size":991,"mtime":1687801324315,"results":"19","hashOfConfig":"13"},{"size":670,"mtime":1687801324185,"results":"20","hashOfConfig":"13"},{"size":5240,"mtime":1687801323925,"results":"21","hashOfConfig":"13"},{"size":596,"mtime":1687691835534,"results":"22","hashOfConfig":"13"},{"size":1162,"mtime":1687801324755,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5fqs2m",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/home/workspace/reactjs/coding-practices/jobbyApp/src/index.js",[],["52","53","54","55","56"],"/home/workspace/reactjs/coding-practices/jobbyApp/src/App.js",["57","58"],"import {Route, Switch} from 'react-router-dom'\nimport Login from './Component/Login'\nimport jobs from './Component/jobs'\nimport Home from './Component/Home'\nimport ProtectedRoute from './Component/ProtectedRoute'\nimport JobsItemDetails from './Component/JobsItemDetails'\n\nimport './App.css'\n\n// These are the lists used in the application. You can move them to any component needed.\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\n// Replace your code here\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/Login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/Jobs\" component={jobs} />\n    <Route exact path=\"/jobs/:id\" component={JobsItemDetails} />\n  </Switch>\n)\nexport default App\n","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/Login/index.js",["59","60","61","62","63"],"import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nclass Login extends Component {\n  state = {username: '', password: '', showSubmitError: false, errorMsg: ''}\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = JwtToken => {\n    const {history} = this.props\n    const Jwttoken = Cookies.set('jwt_token', JwtToken, {expires: 30})\n    if (Jwttoken !== undefined) {\n      history.replace('/')\n    }\n  }\n\n  onSubmitFailure = error => {\n    this.setState({showSubmitError: true, errorMsg: error})\n  }\n\n  Submit = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    console.log(response)\n    const data = await response.json()\n    // const {jwt_token} = data\n    // console.log(`jjjjj${jwt_token}`)\n    console.log(data)\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure()\n    }\n  }\n\n  render() {\n    const {username, password} = this.state\n    console.log(username)\n    console.log(password)\n    const JwtToken = Cookies.get('jwt_token')\n    if (JwtToken !== undefined) {\n      console.log(`verified`)\n    }\n    return (\n      <form onSubmit={this.Submit}>\n        <ul>\n          <label htmlFor=\"name\">username</label>\n          <input\n            type=\"name\"\n            placeholder=\"username\"\n            id=\"name\"\n            value={username}\n            onChange={this.onChangeUsername}\n          />\n        </ul>\n        <ul>\n          <label htmlFor=\"password\">password</label>\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={this.onChangePassword}\n          />\n        </ul>\n        <button type=\"submit\">Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login\n","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/jobs/index.js",["64","65"],"import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Header from '../header'\nimport JobsDescription from '../jobsDescription'\nimport Salary from '../salary'\n\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nclass jobs extends Component {\n  state = {\n    detailsProfile: '',\n    JobsDetails: [],\n    EmploymentId: employmentTypesList[0].employmentTypeId,\n    salaryId: salaryRangesList[0].salaryRangeId,\n    searchInput: '',\n  }\n\n  componentDidMount() {\n    this.getHomeDetails()\n    this.renderDescriptionDetails()\n  }\n\n  getHomeDetails = async () => {\n    const Url = 'https://apis.ccbp.in/profile'\n    const JwtToken = Cookies.get('jwt_token')\n    console.log(`jwt ${JwtToken}`)\n    const Options = {\n      headers: {\n        Authorization: `Bearer ${JwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(Url, Options)\n    console.log(response)\n    if (response.ok) {\n      const data = await response.json()\n      const ProfileDetails = {\n        name: data.profile_details.name,\n        profileImage: data.profile_details.profile_image_url,\n        bio: data.profile_details.short_bio,\n      }\n      console.log(ProfileDetails)\n      this.setState({detailsProfile: ProfileDetails})\n    }\n  }\n\n  renderProfileDetails = () => {\n    const {detailsProfile} = this.state\n    console.log(detailsProfile)\n    const {name, profileImage, bio} = detailsProfile\n    return (\n      <div>\n        <h4>{name}</h4>\n        <img src={profileImage} alt={name} />\n        <p>{bio}</p>\n      </div>\n    )\n  }\n\n  renderDescriptionDetails = async () => {\n    const {EmploymentId, salaryId} = this.state\n\n    const JwtToken = Cookies.get('jwt_token')\n    const Url = ` https://apis.ccbp.in/jobs?employment_type=${EmploymentId}&minimum_package=${salaryId}`\n    console.log(`Token${JwtToken}`)\n    const Options = {\n      headers: {\n        Authorization: `Bearer ${JwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(Url, Options)\n\n    console.log(response)\n    if (response.ok) {\n      const data = await response.json()\n      console.log(data)\n      const fetchedData = data.jobs.map(each => ({\n        companyUrl: each.company_logo_url,\n        employmentType: each.employment_type,\n        id: each.id,\n        jobDescription: each.job_description,\n        location: each.location,\n        salary: each.package_per_annum,\n        rating: each.rating,\n        title: each.title,\n      }))\n\n      console.log(fetchedData)\n      this.setState({JobsDetails: fetchedData})\n    }\n  }\n\n  renderSuccessView = () => {\n    const {JobsDetails, searchInput} = this.state\n    // console.log(JobsDetails)\n\n    const filteredData = JobsDetails.filter(each =>\n      each.title.toLowerCase().includes(searchInput.toLowerCase()),\n    )\n    console.log(filteredData)\n    if (filteredData.length === 0) {\n      return <h1>Not found</h1>\n    }\n\n    return (\n      <div>\n        {filteredData.map(each => (\n          <JobsDescription JobDetails={each} key={each.id} />\n        ))}\n      </div>\n    )\n  }\n\n  onChangeEmployee = id => {\n    this.setState({EmploymentId: id}, this.renderDescriptionDetails)\n  }\n\n  onChangeSalary = id => {\n    this.setState({salaryId: id}, this.renderDescriptionDetails)\n  }\n\n  salaryUpdates = () => {\n    const {EmploymentId} = this.state\n\n    return (\n      <Salary\n        EmploymentId={EmploymentId}\n        EmploymentType={employmentTypesList}\n        SortEmployee={this.onChangeEmployee}\n        changeSalary={this.onChangeSalary}\n        salaryRangesList={salaryRangesList}\n      />\n    )\n  }\n\n  onChangeInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  render() {\n    const {EmploymentId, searchInput, JobsDetails} = this.state\n    console.log(searchInput)\n\n    // const filteredData = JobsDetails.filter(each => each.title === searchInput)\n    // console.log(filteredData)\n    return (\n      <div>\n        <Header />\n        <ul className=\"InputSearch\">\n          <input\n            type=\"search\"\n            className=\"InputClass\"\n            onChange={this.onChangeInput}\n          />\n        </ul>\n        <div className=\"top_container\">\n          <ul className=\"profile_container\">\n            {this.renderProfileDetails()}\n            <ul>{this.salaryUpdates()}</ul>\n          </ul>\n          {this.renderSuccessView()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default jobs\n","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/Home/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/ProtectedRoute/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/header/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/jobsDescription/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/JobsItemDetails/index.js",["66","67"],"import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Skills from '../Skills'\nimport Header from '../header'\n\nimport './index.css'\n\nclass JobsItemDetails extends Component {\n  state = {\n    UpdatedJobDetails: '',\n    // skills: [],\n    SimilarJobsDetails: [],\n    LifeWork: '',\n  }\n\n  componentDidMount() {\n    this.getJobDetails()\n  }\n\n  getJobDetails = async () => {\n    const {match} = this.props\n\n    const {params} = match\n\n    const {id} = params\n    const JwtToken = Cookies.get('jwt_token')\n    const Url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${JwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(Url, options)\n    const data = await response.json()\n    // console.log(data)\n\n    const fetchedData = {\n      jobDetails: {\n        companyUrl: data.job_details.company_logo_url,\n        companyWebsiteUrl: data.job_details.company_website_url,\n        employmentType: data.job_details.employment_type,\n        id: data.job_details.id,\n        description: data.job_details.job_description,\n\n        lifeAtCompany: {\n          Companydescription: data.job_details.life_at_company.description,\n          imageUrl: data.job_details.life_at_company.image_url,\n        },\n        location: data.job_details.location,\n        salary: data.job_details.package_per_annum,\n        rating: data.job_details.rating,\n\n        skills: data.job_details.skills.map(each => ({\n          name: each.name,\n          imageUrl: each.image_url,\n        })),\n        title: data.job_details.title,\n      },\n      similarJobs: data.similar_jobs.map(each => ({\n        id: each.id,\n        title: each.title,\n        employmentType: each.employment_type,\n        jobDescription: each.job_description,\n        location: each.location,\n        rating: each.rating,\n      })),\n    }\n\n    // console.log(fetchedData)\n    this.setState({\n      UpdatedJobDetails: fetchedData.jobDetails,\n      //   skills: fetchedData.jobDetails.skills,\n      LifeWork: fetchedData.jobDetails.lifeAtCompany,\n      SimilarJobsDetails: fetchedData.similarJobs,\n    })\n\n    // console.log(fetchedData.jobDetails.lifeAtCompany)\n  }\n\n  render() {\n    const {UpdatedJobDetails, LifeWork, SimilarJobsDetails} = this.state\n\n    const {lifeAtCompany, skills} = UpdatedJobDetails\n    console.log(lifeAtCompany)\n    console.log(skills)\n    console.log(UpdatedJobDetails)\n    // const {lifeAtCompany} = UpdatedJobDetails\n    // console.log(LifeWork)\n    // console.log(SimilarJobsDetails)\n    // const {Companydescription} = lifeAtCompany\n    // console.log(Companydescription)\n\n    // console.log(lifeAtCompany.Companydescription)\n    const {\n      employmentType,\n      companyWebsiteUrl,\n      companyUrl,\n      id,\n      description,\n      title,\n      rating,\n      salary,\n      location,\n    } = UpdatedJobDetails\n    // console.log(employmentType)\n    // const {salary} = lifeAtCompany\n    // console.log(lifeAtCompany)\n    // console.log(skills)\n    //\n    // console.log(title)\n    // console.log(UpdatedJobDetails.lifeAtCompany.description)\n\n    return (\n      <div>\n        <Header />\n        <div className=\"bg_container\">\n          <ul className=\"TopSection\">\n            <ul className=\"Name_container\">\n              <img src={companyUrl} alt={title} />\n              <ul>\n                <h1>{title}</h1>\n                <p>{rating}</p>\n              </ul>\n            </ul>\n            <ul className=\"salary\">\n              <p>{location}</p>\n              <p>{employmentType}</p>\n\n              <p className=\"income\">{salary}</p>\n            </ul>\n            <hr />\n            <ul className=\"Description\">\n              <h1 className=\"heading\">Description</h1>\n              <p>{description}</p>\n              <h2 className=\"skillsPara\">skills</h2>\n              <ul className=\"skillsContainer\">\n                {skills.map(each => (\n                  <ul className=\"skills\">\n                    <p>{each.name}</p>\n                    <img\n                      src={each.imageUrl}\n                      alt={each.name}\n                      className=\"image\"\n                    />\n                  </ul>\n                ))}\n              </ul>\n            </ul>\n            <ul>\n              <h1>Life at Company</h1>\n              <ul className=\"CompanyList\">\n                <p>{LifeWork.Companydescription}</p>\n                <img src={LifeWork.imageUrl} alt={title} />\n              </ul>\n            </ul>\n          </ul>\n\n          <h1>similar Jobs</h1>\n\n          <ul className=\"similarProductsSection\">\n            {SimilarJobsDetails.map(each => (\n              <Skills similarJobs={each} Url={companyUrl} />\n            ))}\n\n            {/* /* <ul className=\"downSection\">\n                  <ul className=\"similarTop\">\n                    <img src={companyUrl} className=\"image\" />\n                    <h1>{each.title}</h1>\n\n                    <h4>Description</h4>\n                    <p>{each.jobDescription}</p>\n\n                    <p>{each.location}</p>\n                    <p>{each.employmentType}</p>\n                  </ul>\n                </ul> */}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\nexport default JobsItemDetails\n","/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/Skills/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/Component/salary/index.js",["68"],"const Salary = props => {\n  const {\n    EmploymentType,\n    EmploymentId,\n    SortEmployee,\n    salaryRangesList,\n    changeSalary,\n  } = props\n\n  const onChangeEmployee = event => {\n    SortEmployee(event.target.value)\n    console.log(event.target.value)\n  }\n\n  const OnchangeSalary = event => {\n    changeSalary(event.target.value)\n    console.log(event.target.value)\n  }\n\n  return (\n    <ul>\n      {EmploymentType.map(each => (\n        <ul>\n          <input\n            type=\"radio\"\n            id={each.employmentTypeId}\n            name=\"salary\"\n            value={each.employmentTypeId}\n            onChange={onChangeEmployee}\n          />\n          <label htmlFor={each.employmentTypeId}>{each.label}</label>\n        </ul>\n      ))}\n      <ul>\n        {salaryRangesList.map(each => (\n          <ul>\n            <input\n              type=\"radio\"\n              id={each.salaryRangeId}\n              name=\"salary\"\n              value={each.salaryRangeId}\n              onChange={OnchangeSalary}\n            />\n            <label htmlFor={each.salaryRangeId}>{each.label}</label>\n          </ul>\n        ))}\n      </ul>\n    </ul>\n  )\n}\n\nexport default Salary\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":7,"nodeType":"81","messageId":"82","endLine":11,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":30,"column":7,"nodeType":"81","messageId":"82","endLine":30,"endColumn":23},{"ruleId":"79","severity":1,"message":"84","line":3,"column":9,"nodeType":"81","messageId":"82","endLine":3,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":6,"column":40,"nodeType":"87","messageId":"88","endLine":6,"endColumn":62},{"ruleId":"85","severity":1,"message":"89","line":6,"column":64,"nodeType":"87","messageId":"88","endLine":6,"endColumn":76},{"ruleId":"85","severity":1,"message":"86","line":25,"column":20,"nodeType":"87","messageId":"88","endLine":25,"endColumn":41},{"ruleId":"85","severity":1,"message":"89","line":25,"column":43,"nodeType":"87","messageId":"88","endLine":25,"endColumn":58},{"ruleId":"79","severity":1,"message":"90","line":180,"column":12,"nodeType":"81","messageId":"82","endLine":180,"endColumn":24},{"ruleId":"79","severity":1,"message":"91","line":180,"column":39,"nodeType":"81","messageId":"82","endLine":180,"endColumn":50},{"ruleId":"79","severity":1,"message":"92","line":97,"column":7,"nodeType":"81","messageId":"82","endLine":97,"endColumn":24},{"ruleId":"79","severity":1,"message":"93","line":99,"column":7,"nodeType":"81","messageId":"82","endLine":99,"endColumn":9},{"ruleId":"79","severity":1,"message":"90","line":4,"column":5,"nodeType":"81","messageId":"82","endLine":4,"endColumn":17},"lines-around-directive",["94"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'employmentTypesList' is assigned a value but never used.","Identifier","unusedVar","'salaryRangesList' is assigned a value but never used.","'Redirect' is defined but never used.","react/no-unused-state","Unused state field: 'showSubmitError'","Property","unusedStateField","Unused state field: 'errorMsg'","'EmploymentId' is assigned a value but never used.","'JobsDetails' is assigned a value but never used.","'companyWebsiteUrl' is assigned a value but never used.","'id' is assigned a value but never used.","padding-line-between-statements"]